{"version":3,"file":"static/js/main.a20de9e7.js","mappings":"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","sources":["src/types/index.ts","src/api/database.ts","src/components/BohLogItem.tsx","src/screens/HomeScreen.tsx","src/services/achievementService.ts","src/screens/LogCreationScreen.tsx","src/screens/AnalysisScreen.tsx","src/api/analysisService.ts","src/screens/TimerScreen.tsx","src/components/AvatarDisplay.tsx","src/screens/ProfileScreen.tsx","src/navigation/AppNavigator.tsx","App.tsx","src/App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// src/types/index.ts\r\n// 型定義\r\n\r\nexport enum Evaluation {\r\n  GOOD_BOH = \"GOOD_BOH\",\r\n  BAD_BOH = \"BAD_BOH\",\r\n}\r\n\r\nexport enum TagType {\r\n  SITUATION = \"SITUATION\",\r\n  REASON = \"REASON\",\r\n}\r\n\r\nexport enum AvatarState {\r\n  FOCUSED = \"FOCUSED\",\r\n  RELAXED = \"RELAXED\",\r\n  ZONED_OUT = \"ZONED_OUT\",\r\n}\r\n\r\nexport interface Tag {\r\n  id: string;\r\n  name: string;\r\n  type: TagType;\r\n}\r\n\r\nexport interface BohLog {\r\n  id: string;\r\n  timestamp: Date;\r\n  durationMinutes: number;\r\n  evaluation: Evaluation;\r\n  tags: Tag[];\r\n}\r\n\r\nexport interface FocusSession {\r\n  id: string;\r\n  startTime: Date;\r\n  durationMinutes: number;\r\n  focusLevel: 1 | 2 | 3 | 4 | 5; // 5段階評価\r\n}\r\n\r\nexport interface Avatar {\r\n  state: AvatarState;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  name: string;\r\n  avatar: Avatar;\r\n  achievements: string[]; // 獲得した実績IDのリスト\r\n  // --- 追加 ---\r\n  settings?: {\r\n    focusDurationMinutes: number;\r\n    breakDurationMinutes: number;\r\n  };\r\n  // --- ここまで ---\r\n}\r\n","// src/api/database.ts\r\n// データベース処理\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { BohLog, Tag, TagType, FocusSession, User } from \"../types\";\r\nimport \"react-native-get-random-values\"; // crypto.randomUUIDのため\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst BOH_LOGS_KEY = \"BOH_LOGS\";\r\nconst TAGS_KEY = \"TAGS\";\r\nconst USER_KEY = \"USER_DATA\";\r\nconst FOCUS_SESSIONS_KEY = \"FOCUS_SESSIONS\";\r\n\r\n// --- 初期データ ---\r\nconst initialTags: Tag[] = [\r\n  { id: \"1\", name: \"#PC作業中\", type: TagType.SITUATION },\r\n  { id: \"2\", name: \"#会議中\", type: TagType.SITUATION },\r\n  { id: \"3\", name: \"#勉強中\", type: TagType.SITUATION },\r\n  { id: \"4\", name: \"#疲労\", type: TagType.REASON },\r\n  { id: \"5\", name: \"#集中切れ\", type: TagType.REASON },\r\n  { id: \"6\", name: \"#ただ眠い\", type: TagType.REASON },\r\n];\r\n\r\n// --- 初期データ ---\r\nconst initialUser: User = {\r\n  id: \"default-user\",\r\n  name: \"User\",\r\n  achievements: [],\r\n  avatar: { state: \"FOCUSED\" },\r\n  // --- 追加 ---\r\n  settings: {\r\n    focusDurationMinutes: 25,\r\n    breakDurationMinutes: 5,\r\n  },\r\n  // --- ここまで ---\r\n};\r\n\r\nexport const initializeDatabase = async () => {\r\n  const existingTags = await AsyncStorage.getItem(TAGS_KEY);\r\n  if (!existingTags) {\r\n    await AsyncStorage.setItem(TAGS_KEY, JSON.stringify(initialTags));\r\n  }\r\n  const existingUser = await AsyncStorage.getItem(USER_KEY);\r\n  if (!existingUser) {\r\n    await AsyncStorage.setItem(USER_KEY, JSON.stringify(initialUser));\r\n  }\r\n};\r\n\r\n// --- ユーザー関連 (追加) ---\r\nexport const getUser = async (): Promise<User> => {\r\n  const jsonValue = await AsyncStorage.getItem(USER_KEY);\r\n  return jsonValue != null ? JSON.parse(jsonValue) : initialUser;\r\n};\r\n\r\nexport const updateUser = async (user: User): Promise<void> => {\r\n  await AsyncStorage.setItem(USER_KEY, JSON.stringify(user));\r\n};\r\n\r\n// --- 集中セッション関連 (追加) ---\r\nexport const getFocusSessions = async (): Promise<FocusSession[]> => {\r\n  const jsonValue = await AsyncStorage.getItem(FOCUS_SESSIONS_KEY);\r\n  return jsonValue != null ? JSON.parse(jsonValue) : [];\r\n};\r\n\r\nexport const addFocusSession = async (\r\n  sessionData: Omit<FocusSession, \"id\" | \"startTime\">\r\n): Promise<FocusSession> => {\r\n  const sessions = await getFocusSessions();\r\n  const newSession: FocusSession = {\r\n    id: uuidv4(),\r\n    startTime: new Date(),\r\n    ...sessionData,\r\n  };\r\n  const updatedSessions = [...sessions, newSession];\r\n  await AsyncStorage.setItem(\r\n    FOCUS_SESSIONS_KEY,\r\n    JSON.stringify(updatedSessions)\r\n  );\r\n  return newSession;\r\n};\r\n\r\n// --- ログ関連 ---\r\nexport const getBohLogs = async (): Promise<BohLog[]> => {\r\n  const jsonValue = await AsyncStorage.getItem(BOH_LOGS_KEY);\r\n  return jsonValue != null ? JSON.parse(jsonValue) : [];\r\n};\r\n\r\nexport const addBohLog = async (\r\n  logData: Omit<BohLog, \"id\" | \"timestamp\">\r\n): Promise<BohLog> => {\r\n  const logs = await getBohLogs();\r\n  const newLog: BohLog = {\r\n    id: uuidv4(),\r\n    timestamp: new Date(),\r\n    ...logData,\r\n  };\r\n  const updatedLogs = [...logs, newLog];\r\n  await AsyncStorage.setItem(BOH_LOGS_KEY, JSON.stringify(updatedLogs));\r\n  return newLog;\r\n};\r\n\r\n// --- タグ関連 ---\r\nexport const getTags = async (): Promise<Tag[]> => {\r\n  const jsonValue = await AsyncStorage.getItem(TAGS_KEY);\r\n  return jsonValue != null ? JSON.parse(jsonValue) : [];\r\n};\r\n","// src/components/BohLogItem.tsx\r\n// ログ項目\r\n\r\nimport React from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { BohLog, Evaluation } from \"../types\";\r\n\r\ninterface Props {\r\n  log: BohLog;\r\n}\r\n\r\nexport default function BohLogItem({ log }: Props) {\r\n  const logDate = new Date(log.timestamp);\r\n  const formattedDate = `${logDate.toLocaleDateString()} ${logDate.toLocaleTimeString(\r\n    \"ja-JP\",\r\n    { hour: \"2-digit\", minute: \"2-digit\" }\r\n  )}`;\r\n  const isGood = log.evaluation === Evaluation.GOOD_BOH;\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.container,\r\n        isGood ? styles.goodContainer : styles.badContainer,\r\n      ]}\r\n    >\r\n      <View style={styles.header}>\r\n        <Text style={styles.evaluationText}>\r\n          {isGood ? \"🔋 充電\" : \"🔥 浪費\"}\r\n        </Text>\r\n        <Text style={styles.duration}>{log.durationMinutes}分</Text>\r\n      </View>\r\n      <View style={styles.tagsContainer}>\r\n        {log.tags.map((tag) => (\r\n          <Text key={tag.id} style={styles.tag}>\r\n            {tag.name}\r\n          </Text>\r\n        ))}\r\n      </View>\r\n      <Text style={styles.timestamp}>{formattedDate}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 12,\r\n    marginVertical: 6,\r\n    borderRadius: 8,\r\n    borderLeftWidth: 5,\r\n  },\r\n  goodContainer: {\r\n    backgroundColor: \"#E6F4EA\",\r\n    borderColor: \"#4CAF50\",\r\n  },\r\n  badContainer: {\r\n    backgroundColor: \"#FFEBEE\",\r\n    borderColor: \"#F44336\",\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  evaluationText: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  duration: {\r\n    fontSize: 14,\r\n    fontWeight: \"500\",\r\n  },\r\n  tagsContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: 8,\r\n  },\r\n  tag: {\r\n    backgroundColor: \"#E0E0E0\",\r\n    borderRadius: 12,\r\n    paddingVertical: 4,\r\n    paddingHorizontal: 8,\r\n    marginRight: 6,\r\n    marginBottom: 6,\r\n    fontSize: 12,\r\n  },\r\n  timestamp: {\r\n    marginTop: 8,\r\n    fontSize: 12,\r\n    color: \"#666\",\r\n    textAlign: \"right\",\r\n  },\r\n});\r\n","// src/screens/HomeScreen.tsx\r\nimport React, { useState, useCallback } from \"react\";\r\nimport { View, Text, StyleSheet, FlatList, Button } from \"react-native\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport { getBohLogs } from \"../api/database\";\r\nimport { BohLog } from \"../types\";\r\nimport BohLogItem from \"../components/BohLogItem\";\r\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\r\n// import AvatarDisplay from '../components/AvatarDisplay';\r\n\r\n// AppNavigator.tsxで定義する型\r\ntype RootStackParamList = {\r\n  Home: undefined;\r\n  LogCreation: undefined;\r\n};\r\ntype Props = NativeStackScreenProps<RootStackParamList, \"Home\">;\r\n\r\nexport default function HomeScreen({ navigation }: Props) {\r\n  const [logs, setLogs] = useState<BohLog[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const fetchLogs = async () => {\r\n        setIsLoading(true);\r\n        const fetchedLogs = await getBohLogs();\r\n        // 日付の降順でソート\r\n        fetchedLogs.sort(\r\n          (a, b) =>\r\n            new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\r\n        );\r\n        setLogs(fetchedLogs);\r\n        setIsLoading(false);\r\n      };\r\n      fetchLogs();\r\n    }, [])\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* <AvatarDisplay state={...} /> */}\r\n      <Text style={styles.header}>最近のBOH-LOG</Text>\r\n\r\n      <Button\r\n        title=\"ぼーっとした時間を記録する\"\r\n        onPress={() => navigation.navigate(\"LogCreation\")}\r\n      />\r\n\r\n      {isLoading ? (\r\n        <Text>読み込み中...</Text>\r\n      ) : (\r\n        <FlatList\r\n          data={logs}\r\n          keyExtractor={(item) => item.id}\r\n          renderItem={({ item }) => <BohLogItem log={item} />}\r\n          style={styles.list}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginVertical: 16,\r\n  },\r\n  list: {\r\n    marginTop: 16,\r\n  },\r\n});\r\n","// src/services/achievementService.ts\r\nimport { BohLog, FocusSession, Evaluation } from \"../types\";\r\n\r\nexport interface AchievementDefinition {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  // 条件をチェックする関数\r\n  condition: (data: { logs: BohLog[]; sessions: FocusSession[] }) => boolean;\r\n}\r\n\r\n// 実績の定義リスト\r\n// ※デモのため、条件は簡単なものにしています\r\nexport const ALL_ACHIEVEMENTS: AchievementDefinition[] = [\r\n  {\r\n    id: \"analyst_1\",\r\n    title: \"自己分析の鬼\",\r\n    description: \"BOH-LOGを5回以上記録する\",\r\n    condition: ({ logs }) => logs.length >= 5,\r\n  },\r\n  {\r\n    id: \"focus_1\",\r\n    title: \"集中王\",\r\n    description: \"集中タイマーを3回以上完了する\",\r\n    condition: ({ sessions }) => sessions.length >= 3,\r\n  },\r\n  {\r\n    id: \"balance_1\",\r\n    title: \"メリハリ名人\",\r\n    description: \"「充電」ログの割合が50%を超える\",\r\n    condition: ({ logs }) => {\r\n      if (logs.length < 5) return false; // ある程度のログ数が必要\r\n      const goodLogs = logs.filter(\r\n        (log) => log.evaluation === Evaluation.GOOD_BOH\r\n      );\r\n      return goodLogs.length / logs.length > 0.5;\r\n    },\r\n  },\r\n];\r\n\r\n/**\r\n * 新たにアンロックされた実績がないかチェックする\r\n * @param data - ユーザーの全ログ、全セッション、既に持っている実績IDのリスト\r\n * @returns 新たにアンロックされた実績のリスト\r\n */\r\nexport const checkAndUnlockAchievements = (data: {\r\n  logs: BohLog[];\r\n  sessions: FocusSession[];\r\n  unlockedIds: string[];\r\n}): AchievementDefinition[] => {\r\n  const newlyUnlocked: AchievementDefinition[] = [];\r\n\r\n  for (const achievement of ALL_ACHIEVEMENTS) {\r\n    // まだアンロックしておらず、かつ条件を満たしているか\r\n    if (\r\n      !data.unlockedIds.includes(achievement.id) &&\r\n      achievement.condition(data)\r\n    ) {\r\n      newlyUnlocked.push(achievement);\r\n    }\r\n  }\r\n\r\n  return newlyUnlocked;\r\n};\r\n","// src/screens/LogCreationScreen.tsx\r\n// ログ作成画面\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n  TouchableOpacity,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { Alert } from \"react-native\";\r\nimport { Evaluation, Tag, TagType } from \"../types\";\r\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\r\nimport {\r\n  addBohLog,\r\n  getTags,\r\n  getUser,\r\n  getBohLogs,\r\n  getFocusSessions,\r\n  updateUser,\r\n} from \"../api/database\"; // 必要な関数をインポート\r\nimport { checkAndUnlockAchievements } from \"../services/achievementService\"; // サービスをインポート\r\n\r\n// AppNavigator.tsxで定義する型\r\ntype RootStackParamList = {\r\n  Home: undefined;\r\n  LogCreation: undefined;\r\n};\r\ntype Props = NativeStackScreenProps<RootStackParamList, \"LogCreation\">;\r\n\r\nexport default function LogCreationScreen({ navigation }: Props) {\r\n  const [duration, setDuration] = useState<string>(\"15\");\r\n  const [evaluation, setEvaluation] = useState<Evaluation>(Evaluation.BAD_BOH);\r\n  const [availableTags, setAvailableTags] = useState<Tag[]>([]);\r\n  const [selectedTags, setSelectedTags] = useState<Tag[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTags = async () => {\r\n      setAvailableTags(await getTags());\r\n    };\r\n    fetchTags();\r\n  }, []);\r\n\r\n  const toggleTag = (tag: Tag) => {\r\n    setSelectedTags((prev) =>\r\n      prev.find((t) => t.id === tag.id)\r\n        ? prev.filter((t) => t.id !== tag.id)\r\n        : [...prev, tag]\r\n    );\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const durationMinutes = parseInt(duration, 10);\r\n    if (isNaN(durationMinutes) || durationMinutes <= 0) {\r\n      Alert.alert(\"エラー\", \"有効な時間を分単位で入力してください。\");\r\n      return;\r\n    }\r\n    await addBohLog({\r\n      durationMinutes: durationMinutes, // 変換した数値を渡す\r\n      evaluation: evaluation,\r\n      tags: selectedTags,\r\n    });\r\n\r\n    // --- 実績解除チェック (追加) ---\r\n    const currentUser = await getUser();\r\n    const allLogs = await getBohLogs();\r\n    const allSessions = await getFocusSessions();\r\n\r\n    const newlyUnlocked = checkAndUnlockAchievements({\r\n      logs: allLogs,\r\n      sessions: allSessions,\r\n      unlockedIds: currentUser.achievements,\r\n    });\r\n    if (newlyUnlocked.length > 0) {\r\n      const newAchievementIds = newlyUnlocked.map((ach) => ach.id);\r\n      currentUser.achievements.push(...newAchievementIds);\r\n      await updateUser(currentUser);\r\n\r\n      // ユーザーに通知\r\n      Alert.alert(\r\n        \"🏆 実績解除！\",\r\n        `「${newlyUnlocked[0].title}」を達成しました！`\r\n      );\r\n    }\r\n    navigation.goBack();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.label}>どのくらい？ (分)</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        value={duration}\r\n        onChangeText={setDuration}\r\n        placeholder=\"例: 15\"\r\n        keyboardType=\"number-pad\" // 数字入力キーボードを表示\r\n        returnKeyType=\"done\"\r\n      />\r\n\r\n      <Text style={styles.label}>この時間はあなたにとって？</Text>\r\n      <View style={styles.evalContainer}>\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.evalButton,\r\n            evaluation === Evaluation.GOOD_BOH && styles.selectedGood,\r\n          ]}\r\n          onPress={() => setEvaluation(Evaluation.GOOD_BOH)}\r\n        >\r\n          <Text\r\n            style={[\r\n              styles.evalButtonText,\r\n              evaluation === Evaluation.GOOD_BOH && styles.selectedText,\r\n            ]}\r\n          >\r\n            🔋 充電\r\n          </Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.evalButton,\r\n            evaluation === Evaluation.BAD_BOH && styles.selectedBad,\r\n          ]}\r\n          onPress={() => setEvaluation(Evaluation.BAD_BOH)}\r\n        >\r\n          <Text\r\n            style={[\r\n              styles.evalButtonText,\r\n              evaluation === Evaluation.BAD_BOH && styles.selectedText,\r\n            ]}\r\n          >\r\n            🔥 浪費\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Text style={styles.label}>タグ</Text>\r\n      <View style={styles.tagsContainer}>\r\n        {availableTags.map((tag) => (\r\n          <TouchableOpacity key={tag.id} onPress={() => toggleTag(tag)}>\r\n            <Text\r\n              style={[\r\n                styles.tag,\r\n                selectedTags.find((t) => t.id === tag.id) && styles.selectedTag,\r\n              ]}\r\n            >\r\n              {tag.name}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n\r\n      <Button title=\"保存する\" onPress={handleSave} />\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, padding: 16 },\r\n  label: { fontSize: 18, fontWeight: \"bold\", marginTop: 20 },\r\n  evalContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    marginVertical: 10,\r\n  },\r\n  tagsContainer: { flexDirection: \"row\", flexWrap: \"wrap\", marginVertical: 10 },\r\n  tag: {\r\n    padding: 8,\r\n    margin: 4,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 16,\r\n  },\r\n  selectedTag: {\r\n    backgroundColor: \"#007AFF\",\r\n    color: \"white\",\r\n    borderColor: \"#007AFF\",\r\n  },\r\n  evalButton: {\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 12,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    backgroundColor: \"#f0f0f0\",\r\n    marginHorizontal: 5,\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  evalButtonText: {\r\n    fontSize: 16,\r\n    fontWeight: \"600\",\r\n    color: \"#333\",\r\n  },\r\n  selectedGood: {\r\n    backgroundColor: \"#4CAF50\",\r\n    borderColor: \"#4CAF50\",\r\n  },\r\n  selectedBad: {\r\n    backgroundColor: \"#F44336\",\r\n    borderColor: \"#F44336\",\r\n  },\r\n  selectedText: {\r\n    color: \"#fff\",\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 8,\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 12,\r\n    fontSize: 18,\r\n    marginTop: 8,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n","// src/screens/AnalysisScreen.tsx\r\nimport React, { useState, useCallback } from \"react\";\r\nimport { View, Text, StyleSheet, Dimensions } from \"react-native\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport { getBohLogs } from \"../api/database\";\r\nimport {\r\n  calculateGoodBadRatio,\r\n  findDemonTime,\r\n  RatioData,\r\n} from \"../api/analysisService\";\r\nimport { PieChart } from \"react-native-chart-kit\"; // 例: グラフ描画ライブラリ\r\n\r\nexport default function AnalysisScreen() {\r\n  const [ratio, setRatio] = useState<RatioData | null>(null);\r\n  const [demonTime, setDemonTime] = useState<string>(\"\");\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const analyze = async () => {\r\n        const logs = await getBohLogs();\r\n        setRatio(calculateGoodBadRatio(logs));\r\n        setDemonTime(findDemonTime(logs));\r\n      };\r\n      analyze();\r\n    }, [])\r\n  );\r\n\r\n  // --- 変更点：グラフ用のデータを作成 ---\r\n  const chartData =\r\n    ratio && (ratio.good > 0 || ratio.bad > 0)\r\n      ? [\r\n          {\r\n            name: \"🔋 充電\",\r\n            population: ratio.good,\r\n            color: \"#4caf96ff\", // 緑\r\n            legendFontColor: \"#7F7F7F\",\r\n            legendFontSize: 15,\r\n          },\r\n          {\r\n            name: \"🔥 浪費\",\r\n            population: ratio.bad,\r\n            color: \"#F44336\", // 赤\r\n            legendFontColor: \"#7F7F7F\",\r\n            legendFontSize: 15,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n  if (!ratio) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>分析中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>分析レポート</Text>\r\n\r\n      <View style={styles.card}>\r\n        <Text style={styles.cardTitle}>充電 vs 浪費 (合計時間)</Text>\r\n        {chartData.length > 0 ? (\r\n          <PieChart\r\n            data={chartData}\r\n            width={Dimensions.get(\"window\").width - 64} // カードの幅に合わせる\r\n            height={220}\r\n            chartConfig={{\r\n              color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n            }}\r\n            accessor={\"population\"}\r\n            backgroundColor={\"transparent\"}\r\n            paddingLeft={\"15\"}\r\n            absolute // 数値をそのまま表示\r\n          />\r\n        ) : (\r\n          <Text>まだ記録がありません。</Text>\r\n        )}\r\n        {/* --- ここまで --- */}\r\n      </View>\r\n\r\n      <View style={styles.card}>\r\n        <Text style={styles.cardTitle}>👿 あなたの\"魔の時間帯\"</Text>\r\n        <Text style={styles.cardContent}>{demonTime}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    paddingTop: 48,\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n  header: { fontSize: 24, fontWeight: \"bold\", marginBottom: 16 },\r\n  card: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 16,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.22,\r\n    shadowRadius: 2.22,\r\n    elevation: 3,\r\n  },\r\n  cardTitle: { fontSize: 18, fontWeight: \"600\", marginBottom: 8 },\r\n  cardContent: { fontSize: 16, color: \"#333\" },\r\n});\r\n","// src/api/analysisService.ts\r\nimport { BohLog, Evaluation } from \"../types\";\r\n\r\nexport type RatioData = {\r\n  good: number;\r\n  bad: number;\r\n  total: number;\r\n};\r\n\r\nexport const calculateGoodBadRatio = (logs: BohLog[]): RatioData => {\r\n  let good = 0;\r\n  let bad = 0;\r\n  logs.forEach((log) => {\r\n    if (log.evaluation === Evaluation.GOOD_BOH) {\r\n      good += log.durationMinutes;\r\n    } else {\r\n      bad += log.durationMinutes;\r\n    }\r\n  });\r\n  return { good, bad, total: good + bad };\r\n};\r\n\r\nexport const findDemonTime = (logs: BohLog[]): string => {\r\n  const badLogs = logs.filter((log) => log.evaluation === Evaluation.BAD_BOH);\r\n  if (badLogs.length === 0) return \"なし\";\r\n\r\n  const hourCounts: { [hour: number]: number } = {};\r\n  for (let i = 0; i < 24; i++) {\r\n    hourCounts[i] = 0;\r\n  }\r\n\r\n  badLogs.forEach((log) => {\r\n    const hour = new Date(log.timestamp).getHours();\r\n    hourCounts[hour]++;\r\n  });\r\n\r\n  let maxCount = 0;\r\n  let demonHour = -1;\r\n  for (const hour in hourCounts) {\r\n    if (hourCounts[hour] > maxCount) {\r\n      maxCount = hourCounts[hour];\r\n      demonHour = parseInt(hour, 10);\r\n    }\r\n  }\r\n\r\n  return demonHour !== -1 ? `${demonHour}:00 〜 ${demonHour + 1}:00` : \"なし\";\r\n};\r\n","// src/screens/TimerScreen.tsx\r\n// タイマー機能の実装\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n  Alert,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport {\r\n  addBohLog,\r\n  addFocusSession,\r\n  getUser,\r\n  updateUser,\r\n} from \"../api/database\"; // getUser, updateUserを追加\r\nimport { Evaluation, TagType } from \"../types\";\r\n\r\n//const FOCUS_MINUTES = 25 * 60;\r\n//const BREAK_MINUTES = 5 * 60;\r\n\r\nexport default function TimerScreen() {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [focusDuration, setFocusDuration] = useState(\"25\");\r\n  const [breakDuration, setBreakDuration] = useState(\"5\");\r\n  const [time, setTime] = useState(25 * 60);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [mode, setMode] = useState<\"focus\" | \"break\">(\"focus\");\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const hasLoggedRef = useRef(false);\r\n\r\n  // --- 変更点：ユーザー設定の読み込み ---\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const loadUserSettings = async () => {\r\n        const currentUser = await getUser();\r\n        setUser(currentUser);\r\n        const settings = currentUser.settings;\r\n        if (settings) {\r\n          setFocusDuration(settings.focusDurationMinutes.toString());\r\n          setBreakDuration(settings.breakDurationMinutes.toString());\r\n          setTime(settings.focusDurationMinutes * 60);\r\n        }\r\n      };\r\n      loadUserSettings();\r\n    }, [])\r\n  );\r\n\r\n  // --- 変更点：設定の保存ロジック ---\r\n  const handleSaveSettings = async () => {\r\n    Keyboard.dismiss();\r\n    if (!user) return;\r\n    const newFocus = parseInt(focusDuration, 10);\r\n    const newBreak = parseInt(breakDuration, 10);\r\n\r\n    if (isNaN(newFocus) || newFocus <= 0 || isNaN(newBreak) || newBreak <= 0) {\r\n      Alert.alert(\"エラー\", \"有効な時間を入力してください\");\r\n      return;\r\n    }\r\n\r\n    const updatedUser: User = {\r\n      ...user,\r\n      settings: {\r\n        focusDurationMinutes: newFocus,\r\n        breakDurationMinutes: newBreak,\r\n      },\r\n    };\r\n\r\n    // 🔽 ここで保存後に反映！\r\n    if (mode === \"focus\") {\r\n      setTime(newFocus * 60);\r\n    } else {\r\n      setTime(newBreak * 60);\r\n    }\r\n\r\n    await updateUser(updatedUser);\r\n    Alert.alert(\"成功\", \"設定を保存しました。\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isActive && time > 0) {\r\n      intervalRef.current = setInterval(() => {\r\n        setTime((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n    } else if (time === 0) {\r\n      handleTimerEnd();\r\n    }\r\n    return () => {\r\n      if (intervalRef.current) clearInterval(intervalRef.current);\r\n    };\r\n  }, [isActive, time]);\r\n\r\n  const handleTimerEnd = async () => {\r\n    if (hasLoggedRef.current) return; // 🔒 二重保存を防ぐ\r\n    hasLoggedRef.current = true;\r\n\r\n    setIsActive(false);\r\n    if (intervalRef.current) clearInterval(intervalRef.current);\r\n\r\n    if (mode === \"focus\") {\r\n      Alert.alert(\"お疲れ様です！\", \"休憩を開始します。\", [\r\n        {\r\n          text: \"OK\",\r\n          onPress: () => {\r\n            setMode(\"break\");\r\n            hasLoggedRef.current = false;\r\n          },\r\n        },\r\n      ]);\r\n    } else {\r\n      Alert.alert(\"休憩終了\", \"集中モードに戻りますか？\", [\r\n        {\r\n          text: \"はい\",\r\n          onPress: async () => {\r\n            await addBohLog({\r\n              durationMinutes: parseInt(breakDuration, 10),\r\n              evaluation: Evaluation.GOOD_BOH,\r\n              tags: [\r\n                { id: \"auto-1\", name: \"#意図的な休憩\", type: TagType.REASON },\r\n              ],\r\n            });\r\n            setMode(\"focus\");\r\n            hasLoggedRef.current = false;\r\n          },\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const durationMinutes =\r\n      mode === \"focus\"\r\n        ? parseInt(focusDuration, 10)\r\n        : parseInt(breakDuration, 10);\r\n\r\n    if (!isNaN(durationMinutes) && durationMinutes > 0) {\r\n      setTime(durationMinutes * 60);\r\n    }\r\n  }, [mode]);\r\n\r\n  const toggleTimer = () => setIsActive(!isActive);\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const min = Math.floor(seconds / 60);\r\n    const sec = seconds % 60;\r\n    return `${min.toString().padStart(2, \"0\")}:${sec\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* --- 変更点：設定UIの追加 --- */}\r\n      <View style={styles.settingsContainer}>\r\n        <View style={styles.inputGroup}>\r\n          <Text>集中 (分):</Text>\r\n          <TextInput\r\n            value={focusDuration}\r\n            onChangeText={setFocusDuration}\r\n            style={styles.input}\r\n            keyboardType=\"number-pad\"\r\n            returnKeyType=\"done\"\r\n          />\r\n        </View>\r\n        <View style={styles.inputGroup}>\r\n          <Text>休憩 (分):</Text>\r\n          <TextInput\r\n            value={breakDuration}\r\n            onChangeText={setBreakDuration}\r\n            style={styles.input}\r\n            keyboardType=\"number-pad\"\r\n            returnKeyType=\"done\"\r\n          />\r\n        </View>\r\n        <Button title=\"設定を保存\" onPress={handleSaveSettings} />\r\n      </View>\r\n\r\n      <Text style={styles.modeText}>\r\n        {mode === \"focus\" ? \"集中モード\" : \"休憩モード\"}\r\n      </Text>\r\n      <Text style={styles.timer}>{formatTime(time)}</Text>\r\n      <Button title={isActive ? \"一時停止\" : \"開始\"} onPress={toggleTimer} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\r\n  modeText: { fontSize: 32, marginBottom: 20 },\r\n  timer: { fontSize: 72, fontWeight: \"bold\", marginBottom: 40 },\r\n  settingsContainer: { padding: 20, borderBottomWidth: 1, borderColor: \"#eee\" },\r\n  inputGroup: { flexDirection: \"row\", alignItems: \"center\", marginBottom: 10 },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    width: 60,\r\n    marginLeft: 10,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","// src/components/AvatarDisplay.tsx\r\nimport React from \"react\";\r\nimport { Text, StyleSheet } from \"react-native\";\r\nimport { AvatarState } from \"../types\";\r\n\r\ninterface Props {\r\n  state: AvatarState;\r\n  size?: \"large\" | \"medium\";\r\n}\r\n\r\nexport default function AvatarDisplay({ state, size = \"large\" }: Props) {\r\n  const avatarStyle = size === \"large\" ? styles.large : styles.medium;\r\n  let emoji = \"😐\"; // Default\r\n\r\n  switch (state) {\r\n    case AvatarState.FOCUSED:\r\n      emoji = \"😎\"; // キリッとして賢そうな見た目\r\n      break;\r\n    case AvatarState.RELAXED:\r\n      emoji = \"😌\"; // リラックスして気持ちよさそうな見た目\r\n      break;\r\n    case AvatarState.ZONED_OUT:\r\n      emoji = \"😵\"; // 魂が抜けたような見た目\r\n      break;\r\n  }\r\n\r\n  return <Text style={[styles.avatar, avatarStyle]}>{emoji}</Text>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  avatar: {\r\n    textAlign: \"center\",\r\n  },\r\n  large: {\r\n    fontSize: 100,\r\n  },\r\n  medium: {\r\n    fontSize: 50,\r\n  },\r\n});\r\n","// src/screens/ProfileScreen.tsx\r\nimport React, { useCallback, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  FlatList,\r\n  ScrollView,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport { getUser, getBohLogs, updateUser } from \"../api/database\";\r\nimport { User, BohLog, AvatarState, Evaluation } from \"../types\";\r\nimport {\r\n  ALL_ACHIEVEMENTS,\r\n  AchievementDefinition,\r\n} from \"../services/achievementService\";\r\nimport AvatarDisplay from \"../components/AvatarDisplay\";\r\n\r\n// アバターの状態を決定するロジック\r\nconst determineAvatarState = (logs: BohLog[]): AvatarState => {\r\n  if (logs.length < 5) return AvatarState.FOCUSED; // データが少ないうちは普通\r\n\r\n  const total = logs.length;\r\n  const badCount = logs.filter(\r\n    (log) => log.evaluation === Evaluation.BAD_BOH\r\n  ).length;\r\n  const goodCount = logs.filter(\r\n    (log) => log.evaluation === Evaluation.GOOD_BOH\r\n  ).length;\r\n\r\n  if (badCount / total > 0.6) return AvatarState.ZONED_OUT;\r\n  if (goodCount / total > 0.6) return AvatarState.RELAXED;\r\n\r\n  return AvatarState.FOCUSED;\r\n};\r\n\r\nexport default function ProfileScreen() {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [avatarState, setAvatarState] = useState<AvatarState>(\r\n    AvatarState.FOCUSED\r\n  );\r\n  const [isEditingName, setIsEditingName] = useState(false);\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const currentUser = await getUser();\r\n    const allLogs = await getBohLogs();\r\n    const newAvatarState = determineAvatarState(allLogs);\r\n\r\n    setUser(currentUser);\r\n    setNameInput(currentUser.name); // 編集用のstateにも名前をセット\r\n    setAvatarState(newAvatarState);\r\n  }, []);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      fetchData();\r\n    }, [fetchData])\r\n  );\r\n\r\n  const handleSaveName = async () => {\r\n    if (!user || nameInput.trim() === \"\") {\r\n      Alert.alert(\"エラー\", \"名前を入力してください。\");\r\n      return;\r\n    }\r\n\r\n    const updatedUser: User = { ...user, name: nameInput.trim() };\r\n    await updateUser(updatedUser);\r\n    setUser(updatedUser); // 画面上のユーザー情報を更新\r\n    setIsEditingName(false); // 編集モードを終了\r\n    Alert.alert(\"成功\", \"名前を更新しました。\");\r\n  };\r\n\r\n  const renderAchievement = ({ item }: { item: AchievementDefinition }) => {\r\n    const isUnlocked = user?.achievements.includes(item.id) ?? false;\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.achievementCard,\r\n          !isUnlocked && styles.lockedAchievement,\r\n        ]}\r\n      >\r\n        <Text style={styles.achievementTitle}>\r\n          {item.title} {isUnlocked ? \"🏆\" : \"\"}\r\n        </Text>\r\n        <Text style={styles.achievementDesc}>{item.description}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  if (!user)\r\n    return (\r\n      <View>\r\n        <Text>読み込み中...</Text>\r\n      </View>\r\n    );\r\n  return (\r\n    <ScrollView style={styles.container} keyboardShouldPersistTaps=\"handled\">\r\n      <View style={styles.avatarSection}>\r\n        <AvatarDisplay state={avatarState} />\r\n\r\n        {/* --- 名前の表示部分を修正 --- */}\r\n        {isEditingName ? (\r\n          <View style={styles.editNameContainer}>\r\n            <TextInput\r\n              style={styles.nameInput}\r\n              value={nameInput}\r\n              onChangeText={setNameInput}\r\n              autoFocus={true}\r\n            />\r\n            <TouchableOpacity\r\n              style={styles.saveButton}\r\n              onPress={handleSaveName}\r\n            >\r\n              <Text style={styles.saveButtonText}>保存</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        ) : (\r\n          <TouchableOpacity onPress={() => setIsEditingName(true)}>\r\n            <Text style={styles.userName}>{user.name} ✏️</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        {/* --- 修正ここまで --- */}\r\n      </View>\r\n      <Text style={styles.header}>実績一覧</Text>\r\n      <FlatList\r\n        data={ALL_ACHIEVEMENTS}\r\n        renderItem={renderAchievement}\r\n        keyExtractor={(item) => item.id}\r\n        scrollEnabled={false} // ScrollViewの中なので無効化\r\n      />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, padding: 16 },\r\n  avatarSection: { alignItems: \"center\", marginBottom: 24 },\r\n  userName: { fontSize: 24, fontWeight: \"bold\", marginTop: 8, padding: 8 },\r\n  header: { fontSize: 22, fontWeight: \"bold\", marginBottom: 12 },\r\n  editNameContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 8,\r\n  },\r\n  nameInput: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    padding: 8,\r\n    flex: 1,\r\n  },\r\n  saveButton: {\r\n    marginLeft: 8,\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 10,\r\n    backgroundColor: \"#007AFF\",\r\n    borderRadius: 8,\r\n  },\r\n  saveButtonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  achievementCard: {\r\n    backgroundColor: \"#fff\",\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    marginBottom: 12,\r\n  },\r\n  lockedAchievement: { backgroundColor: \"#f0f0f0\", opacity: 0.7 },\r\n  achievementTitle: { fontSize: 18, fontWeight: \"600\" },\r\n  achievementDesc: { fontSize: 14, color: \"#666\", marginTop: 4 },\r\n});\r\n","// src/navigation/AppNavigator.tsx\r\n// 画面遷移の設定\r\n\r\nimport React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport LogCreationScreen from \"../screens/LogCreationScreen\";\r\nimport AnalysisScreen from \"../screens/AnalysisScreen\";\r\nimport TimerScreen from \"../screens/TimerScreen\";\r\nimport ProfileScreen from \"../screens/ProfileScreen\";\r\n\r\n// Stack Navigator用の型定義\r\nexport type RootStackParamList = {\r\n  Main: undefined; // Tab Navigator全体\r\n  LogCreation: undefined;\r\n};\r\n\r\n// Tab Navigator用の型定義\r\nexport type TabParamList = {\r\n  Home: undefined;\r\n  Analysis: undefined;\r\n  Timer: undefined;\r\n};\r\n\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\nconst Tab = createBottomTabNavigator<TabParamList>();\r\n\r\nfunction HomeStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Main\"\r\n        component={MainTabs}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"LogCreation\"\r\n        component={LogCreationScreen}\r\n        options={{ title: \"BOH-LOGを記録\" }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction MainTabs() {\r\n  return (\r\n    <Tab.Navigator screenOptions={{ headerShown: false }}>\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{ title: \"ホーム\" }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Analysis\"\r\n        component={AnalysisScreen}\r\n        options={{ title: \"分析\" }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Timer\"\r\n        component={TimerScreen}\r\n        options={{ title: \"集中タイマー\" }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileScreen}\r\n        options={{ title: \"プロフィール\" }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default function AppNavigator() {\r\n  return (\r\n    <NavigationContainer>\r\n      <HomeStack />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n","// boh-log-app/App.tsx\nimport App from \"./src/App\";\n\nexport default App;\n","// src/App.tsx\r\n// アプリのルート\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { StatusBar } from \"react-native\";\r\nimport AppNavigator from \"./navigation/AppNavigator\";\r\nimport { initializeDatabase } from \"./api/database\";\r\n\r\nexport default function App() {\r\n  useEffect(() => {\r\n    // アプリ起動時に一度だけ実行\r\n    const setup = async () => {\r\n      await initializeDatabase();\r\n    };\r\n    setup();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <StatusBar barStyle=\"dark-content\" />\r\n      <AppNavigator />\r\n    </>\r\n  );\r\n}\r\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [888], () => (__webpack_require__(1835)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Evaluation","TagType","AvatarState","BOH_LOGS_KEY","TAGS_KEY","USER_KEY","FOCUS_SESSIONS_KEY","initialTags","id","name","type","SITUATION","REASON","initialUser","achievements","avatar","state","settings","focusDurationMinutes","breakDurationMinutes","getUser","async","jsonValue","AsyncStorage","getItem","JSON","parse","updateUser","setItem","stringify","user","getFocusSessions","getBohLogs","addBohLog","logs","newLog","Object","assign","uuidv4","timestamp","Date","logData","updatedLogs","BohLogItem","log","logDate","formattedDate","toLocaleDateString","toLocaleTimeString","hour","minute","isGood","evaluation","GOOD_BOH","_jsxs","View","style","styles","container","goodContainer","badContainer","children","header","_jsx","Text","evaluationText","duration","durationMinutes","tagsContainer","tags","map","tag","StyleSheet","create","padding","marginVertical","borderRadius","borderLeftWidth","backgroundColor","borderColor","flexDirection","justifyContent","alignItems","fontSize","fontWeight","flexWrap","marginTop","paddingVertical","paddingHorizontal","marginRight","marginBottom","color","textAlign","HomeScreen","navigation","setLogs","useState","isLoading","setIsLoading","useFocusEffect","useCallback","fetchedLogs","sort","a","b","getTime","fetchLogs","Button","title","onPress","navigate","FlatList","data","keyExtractor","item","renderItem","list","flex","ALL_ACHIEVEMENTS","description","condition","length","sessions","filter","LogCreationScreen","setDuration","setEvaluation","BAD_BOH","availableTags","setAvailableTags","selectedTags","setSelectedTags","useEffect","getTags","fetchTags","label","TextInput","input","value","onChangeText","placeholder","keyboardType","returnKeyType","evalContainer","TouchableOpacity","evalButton","selectedGood","evalButtonText","selectedText","selectedBad","prev","find","t","toggleTag","selectedTag","parseInt","isNaN","Alert","alert","currentUser","newlyUnlocked","achievement","unlockedIds","includes","push","checkAndUnlockAchievements","newAchievementIds","ach","goBack","margin","borderWidth","marginHorizontal","AnalysisScreen","ratio","setRatio","demonTime","setDemonTime","good","bad","forEach","total","calculateGoodBadRatio","badLogs","hourCounts","i","getHours","maxCount","demonHour","findDemonTime","analyze","chartData","population","legendFontColor","legendFontSize","card","cardTitle","PieChart","width","Dimensions","get","height","chartConfig","opacity","accessor","paddingLeft","absolute","cardContent","paddingTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","TimerScreen","setUser","focusDuration","setFocusDuration","breakDuration","setBreakDuration","time","setTime","isActive","setIsActive","mode","setMode","intervalRef","useRef","hasLoggedRef","toString","loadUserSettings","current","setInterval","prevTime","handleTimerEnd","clearInterval","text","settingsContainer","inputGroup","Keyboard","dismiss","newFocus","newBreak","updatedUser","modeText","timer","seconds","sec","Math","floor","padStart","formatTime","toggleTimer","borderBottomWidth","marginLeft","AvatarDisplay","size","avatarStyle","large","medium","emoji","FOCUSED","RELAXED","ZONED_OUT","ProfileScreen","avatarState","setAvatarState","isEditingName","setIsEditingName","nameInput","setNameInput","fetchData","newAvatarState","badCount","goodCount","determineAvatarState","ScrollView","keyboardShouldPersistTaps","avatarSection","editNameContainer","autoFocus","saveButton","trim","saveButtonText","userName","renderAchievement","isUnlocked","achievementCard","lockedAchievement","achievementTitle","achievementDesc","scrollEnabled","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","HomeStack","Navigator","Screen","component","MainTabs","options","headerShown","screenOptions","AppNavigator","NavigationContainer","initializeDatabase","setup","_Fragment","StatusBar","barStyle","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}